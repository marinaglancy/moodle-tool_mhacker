{{!
    This file is part of Moodle - https://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template rb/datasource

    Contenttype content manager class.

    Context variables required for this template:
    * component
    * copyright

    Example context (json):
    {
        "component": "local_test",
        "copyright": "2022 Your name"
    }
}}
{{< tool_mhacker/rb/boilerplate_php }}
{{$ description }}Reportbuilder datasource {{ name }}.{{/ description }}
{{$ package }}{{ component }}{{/ package }}
{{$ copyright }}{{ copyright }}{{/ copyright }}
{{$ namespace }}
namespace {{ component }}\reportbuilder\datasource;
{{/ namespace }}
{{$ use }}
{{{uses}}}
{{/ use }}
{{/ tool_mhacker/rb/boilerplate_php }}
class {{ name }} extends datasource {
    /**
     * Return user friendly name of the datasource
     *
     * @return string
     */
    public static function get_name(): string {
        return get_string('datasource_{{ name }}', '{{ component }}');
    }

    /**
     * Initialise report
     */
    protected function initialise(): void {
{{#entities}}
{{#preventityname}}
        // Join the {{entityname}} entity.
{{/preventityname}}
        ${{entityname}}entity = new {{entityclass}}();
        ${{entityname}}tablealias = ${{entityname}}entity->get_table_alias('{{entitytable}}');
{{^preventityname}}
        $this->set_main_table('{{entitytable}}', ${{entityname}}tablealias);
        $this->add_entity(${{entityname}}entity);
{{/preventityname}}
{{#preventityname}}
        ${{entityname}}join = "LEFT JOIN {{{entitytableinbrackets}}} {${{entityname}}tablealias}
                               ON {${{entityname}}tablealias}.fieldid = {${{preventityname}}tablealias}.id";
        $this->add_entity(${{entityname}}entity->add_join(${{entityname}}join));
{{/preventityname}}

{{/entities}}

        // Add all columns from entities to be available in custom reports.
{{#entities}}
        $this->add_columns_from_entity(${{entityname}}entity->get_entity_name());
{{/entities}}

        // Add all filters from entities to be available in custom reports.
{{#entities}}
        $this->add_filters_from_entity(${{entityname}}entity->get_entity_name());
{{/entities}}

        // Add all conditions from entities to be available in custom reports.
{{#entities}}
        $this->add_conditions_from_entity(${{entityname}}entity->get_entity_name());
{{/entities}}
    }

    /**
     * Return the columns that will be added to the report as part of default setup
     *
     * @return string[]
     */
    public function get_default_columns(): array {
        return [
{{#defaultcolumns}}
            '{{{.}}}',
{{/defaultcolumns}}
        ];
    }

    /**
     * Return the filters that will be added to the report once is created
     *
     * @return string[]
     */
    public function get_default_filters(): array {
        return [
{{#defaultfilters}}
            '{{{.}}}',
{{/defaultfilters}}
        ];
    }

    /**
     * Return the conditions that will be added to the report once is created
     *
     * @return string[]
     */
    public function get_default_conditions(): array {
        return [];
    }
}
